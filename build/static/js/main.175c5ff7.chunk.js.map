{"version":3,"sources":["components/Cards/Cards.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","images/image.png","components/Chart/Chart.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","StylesProvider","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","ReactGA","initialize","pageview","image","src","coronaImage","alt","class","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.175c5ff7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__20P7J\",\"card\":\"Cards_card__iPnrX\",\"infected\":\"Cards_infected__3Qv7e\",\"recovered\":\"Cards_recovered__1NE1V\",\"deaths\":\"Cards_deaths__x9lR2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2-Nc5\"};","import React from 'react';\r\nimport{ Card, CardContent, Typography,Grid }from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'\r\nimport styles from './Cards.module.css'\r\nconst Cards = ({data:{confirmed, recovered, deaths,lastUpdate}})  => {\r\n    \r\n    if(!confirmed){\r\n        return 'loading...';\r\n\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify =\"center\">\r\n                <Grid item component={Card} xs={12}md={3} className={cx(styles.card, styles.infected)}>\r\n\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12}md={3} className={cx(styles.card, styles.recovered)}>\r\n\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12}md={3} className={cx(styles.card, styles.deaths)}>\r\n\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of death caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                \r\n\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url ='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) => {\r\n    let changeableUrl= url;\r\n    if(country){\r\n        changeableUrl= `${url}/countries/${country}`\r\n    }\r\n    try{\r\n        const {data:{confirmed,recovered,deaths,lastUpdate}} =await axios.get(changeableUrl);\r\n        \r\n        \r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    \r\n    }\r\n    \r\n}\r\nexport const fetchDailyData = async () =>{\r\n    try{\r\n        const{data} = await axios.get(`${url}/daily`)\r\n        const modifiedData=data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n\r\n        }))\r\n        return modifiedData;\r\n    }catch(error){}\r\n}\r\n\r\nexport const fetchCountries =async()=>{\r\n    try{\r\n        const { data: { countries } }=await axios.get(`${url}/countries`);\r\n        return countries.map((country)=>country.name);\r\n\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n\r\n    }\r\n}","import React, {useState,useEffect} from 'react';\r\nimport{fetchDailyData} from '../../api';\r\nimport{Line,Bar} from 'react-chartjs-2'\r\nimport { StylesProvider } from '@material-ui/core';\r\nimport styles from './Chart.module.css';\r\nconst Chart = ({data:{confirmed,deaths,recovered},country})  => {\r\n    const[dailyData, setDailyData]=useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI= async()=>{\r\n            setDailyData(await fetchDailyData());\r\n        };\r\n\r\n        \r\n        fetchAPI();\r\n\r\n    },[]);\r\n    const lineChart=(\r\n        dailyData.length\r\n        ?(\r\n            <Line\r\n            data={{\r\n                labels:dailyData.map(({date})=>date),\r\n                datasets:[{ \r\n                    data: dailyData.map(({confirmed})=>confirmed),\r\n                    label: 'Infected',\r\n                    borderColor:'#3333ff',\r\n                    fill: true,\r\n\r\n\r\n            },{\r\n                    data: dailyData.map(({deaths})=>deaths),\r\n                    label: 'Deaths',\r\n                    borderColor:'red',\r\n                    backgroundColor:'rgba(255,0,0,0.5)',\r\n\r\n                    fill: true,\r\n                        \r\n            }],\r\n        }}\r\n            \r\n            \r\n            \r\n        />):null\r\n\r\n    );\r\n    const barChart =(\r\n        confirmed\r\n        ?(\r\n            <Bar\r\n                data={{\r\n                    labels:['Infected','Recovered','Deaths'],\r\n                    datasets:[{\r\n                        label:'people',\r\n                        backgroundColor:[\r\n                            'rgba(0, 0, 255, 0.5)',\r\n                            'rgba(0, 255, 0, 0.5)',\r\n                            'rgba(255, 0, 0, 0.5)',],\r\n                            data:[confirmed.value,recovered.value,deaths.value]\r\n                        \r\n                    }]\r\n\r\n\r\n                }}\r\n                options={{\r\n                    legend:{display: false},\r\n                    title:{display: true,text:`Current state in ${country}`}\r\n\r\n                }}\r\n            />\r\n        ):null\r\n    )\r\n    return(\r\n        <div className={styles.container}>\r\n            {country? barChart:lineChart}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Chart;","import React,{ useState,useEffect} from 'react';\r\nimport {NativeSelect, FormControl, StylesProvider}from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {  fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange})  => {\r\n    const[fetchedCountries,setFetchedCountries]= useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI= async()=>{\r\n            setFetchedCountries(await fetchCountries());\r\n\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n    console.log(fetchedCountries);\r\n    return(\r\n        <FormControl className={StylesProvider.FormControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i)=> <option key={i}value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport coronaImage from './images/image.png';\r\nimport{\r\n    Cards,Chart,CountryPicker\r\n} from './components';\r\nimport styles from './App.module.css';\r\nimport{fetchData} from './api';\r\nimport ReactGA from 'react-ga';\r\n\r\nfunction initilizeAnalytics(){\r\n    ReactGA.initialize('UA-163807935-1')\r\n    ReactGA.pageview('/app')\r\n}\r\n\r\nclass App extends React.Component{\r\n\r\n    \r\n    \r\n    state= {\r\n        data:{},\r\n        country:'',\r\n    }\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data:fetchedData});\r\n    }\r\n    handleCountryChange =async(country)=>{\r\n        const fetchedData=await fetchData(country);\r\n        this.setState({data:fetchedData, country: country});\r\n    }\r\n    \r\n    render(){\r\n        initilizeAnalytics()\r\n        const{data, country}=this.state;\r\n        return(\r\n\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src = {coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n                <div class=\"row\">\r\n                    <div class=\"col text-light text-center\">\r\n                        <p>&copy; Copyright 2020,Made by Shivam bhatnagar</p>\r\n                    </div>\r\n                 </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1oU9y\",\"image\":\"App_image__2b-Pd\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__28QZ4\"};"],"sourceRoot":""}